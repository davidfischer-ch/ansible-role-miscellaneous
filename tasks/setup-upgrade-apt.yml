---

- block:
    - name: Configure packages sources (old format)
      ansible.builtin.template:
        src: '{{ item }}'
        dest: /etc/apt/sources.list
        mode: '664'
      register: _apt_old_sources
      with_first_found:
        - files: '{{ apt_old_sources_files }}'
          skip: false

    - name: Configure packages sources (new format)
      ansible.builtin.template:
        src: '{{ item }}'
        dest: /etc/apt/sources.list.d/{{ ansible_distribution|lower }}.sources
        mode: '664'
      register: _apt_new_sources
      with_first_found:
        - files: '{{ apt_new_sources_files }}'
          skip: '{{ _apt_old_sources.size > 70 }}'
          # Weak heuristic to detect that sources.list has actual data and not a "banner"

    - name: Install extra repositories
      ansible.builtin.apt_repository:
        repo: '{{ item }}'
        state: present
        update_cache: true
      loop: '{{ extra_apt_repositories }}'
      register: _apt_extra_repositories

    - name: Refresh package manager cache
      ansible.builtin.apt:
        update_cache: true
      when: >
        (_apt_old_sources is change or _apt_new_sources is change) and
        not _apt_extra_repositories is change

    - name: Fix any previously running packages upgrade
      ansible.builtin.command:
        dpkg --configure -a
      changed_when: _upgrade_fix.stdout|default('')|length > 0
      register: _upgrade_fix

    - name: Install package manager tools
      ansible.builtin.package:
        name: '{{ package_manager_tools }}'
        state: present

    - name: Install SNI tools for Python<2.7.9
      ansible.builtin.package:
        name: '{{ apt_sni_tools }}'
        state: present
      when: ansible_python_version is version('2.7.9', '<')

    - name: Install extra Debian packages
      ansible.builtin.apt:
        deb: '{{ item }}'
        state: present
      loop: '{{ extra_apt_packages }}'

    - block:
        - name: Upgrade the packages
          ansible.builtin.apt:
            upgrade: full
            update_cache: true
            cache_valid_time: '{{ upgrade_packages_cache_valid_time }}'
          async: '{{ omit if ansible_check_mode else upgrade_packages_async }}'
          poll: '{{ upgrade_packages_poll }}'

        - name: Cleanup the packages
          ansible.builtin.shell: >
            apt-get -y autoremove && apt-get -y autoclean
          changed_when: _upgrade_cleanup.stdout_lines|length > 7
          register: _upgrade_cleanup
      when: upgrade_packages|bool
  become: true
  tags: [miscellaneous, packages, upgrade]

...
